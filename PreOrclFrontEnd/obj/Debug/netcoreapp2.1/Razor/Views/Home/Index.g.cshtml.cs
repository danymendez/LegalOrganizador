#pragma checksum "C:\Users\Palacios\Source\Repos\PreOracle\PreOrclFrontEnd\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8ce8b47b2fabbe235831dc94f0b824b20a45d30f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Palacios\Source\Repos\PreOracle\PreOrclFrontEnd\Views\_ViewImports.cshtml"
using PreOrclFrontEnd;

#line default
#line hidden
#line 2 "C:\Users\Palacios\Source\Repos\PreOracle\PreOrclFrontEnd\Views\_ViewImports.cshtml"
using PreOrclFrontEnd.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8ce8b47b2fabbe235831dc94f0b824b20a45d30f", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b30f34cfaf3d74d79d71ae14a5974b07fb15c499", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "success", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "danger", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "info", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "pink", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "primary", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "warning", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\Palacios\Source\Repos\PreOracle\PreOrclFrontEnd\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 25673, true);
            WriteLiteral(@"<div class=""content"">
    <!-- Animated -->
    <div class=""animated fadeIn"">
        <!-- Widgets  -->
        <div class=""row"">
            <div class=""col-lg-3 col-md-6"">
                <div class=""card"">
                    <div class=""card-body"">
                        <div class=""stat-widget-five"">
                            <div class=""stat-icon dib flat-color-1"">
                                <i class=""pe-7s-cash""></i>
                            </div>
                            <div class=""stat-content"">
                                <div class=""text-left dib"">
                                    <div class=""stat-text"">$<span class=""count"">23569</span></div>
                                    <div class=""stat-heading"">Revenue</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class=""col-lg-3 col-md-6"">
                <div");
            WriteLiteral(@" class=""card"">
                    <div class=""card-body"">
                        <div class=""stat-widget-five"">
                            <div class=""stat-icon dib flat-color-2"">
                                <i class=""pe-7s-cart""></i>
                            </div>
                            <div class=""stat-content"">
                                <div class=""text-left dib"">
                                    <div class=""stat-text""><span class=""count"">3435</span></div>
                                    <div class=""stat-heading"">Sales</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class=""col-lg-3 col-md-6"">
                <div class=""card"">
                    <div class=""card-body"">
                        <div class=""stat-widget-five"">
                            <div class=""stat-icon dib flat-color-3"">
                 ");
            WriteLiteral(@"               <i class=""pe-7s-browser""></i>
                            </div>
                            <div class=""stat-content"">
                                <div class=""text-left dib"">
                                    <div class=""stat-text""><span class=""count"">349</span></div>
                                    <div class=""stat-heading"">Templates</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class=""col-lg-3 col-md-6"">
                <div class=""card"">
                    <div class=""card-body"">
                        <div class=""stat-widget-five"">
                            <div class=""stat-icon dib flat-color-4"">
                                <i class=""pe-7s-users""></i>
                            </div>
                            <div class=""stat-content"">
                                <div class=""text-left dib"">
 ");
            WriteLiteral(@"                                   <div class=""stat-text""><span class=""count"">2986</span></div>
                                    <div class=""stat-heading"">Clients</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /Widgets -->
        <!--  Traffic  -->
        <div class=""row"">
            <div class=""col-lg-12"">
                <div class=""card"">
                    <div class=""card-body"">
                        <h4 class=""box-title"">Traffic </h4>
                    </div>
                    <div class=""row"">
                        <div class=""col-lg-8"">
                            <div class=""card-body"">
                                <!-- <canvas id=""TrafficChart""></canvas>   -->
                                <div id=""traffic-chart"" class=""traffic-chart""></div>
                            </div>
                       ");
            WriteLiteral(@" </div>
                        <div class=""col-lg-4"">
                            <div class=""card-body"">
                                <div class=""progress-box progress-1"">
                                    <h4 class=""por-title"">Visits</h4>
                                    <div class=""por-txt"">96,930 Users (40%)</div>
                                    <div class=""progress mb-2"" style=""height: 5px;"">
                                        <div class=""progress-bar bg-flat-color-1"" role=""progressbar"" style=""width: 40%;"" aria-valuenow=""25"" aria-valuemin=""0"" aria-valuemax=""100""></div>
                                    </div>
                                </div>
                                <div class=""progress-box progress-2"">
                                    <h4 class=""por-title"">Bounce Rate</h4>
                                    <div class=""por-txt"">3,220 Users (24%)</div>
                                    <div class=""progress mb-2"" style=""height: 5px;"">
                  ");
            WriteLiteral(@"                      <div class=""progress-bar bg-flat-color-2"" role=""progressbar"" style=""width: 24%;"" aria-valuenow=""25"" aria-valuemin=""0"" aria-valuemax=""100""></div>
                                    </div>
                                </div>
                                <div class=""progress-box progress-2"">
                                    <h4 class=""por-title"">Unique Visitors</h4>
                                    <div class=""por-txt"">29,658 Users (60%)</div>
                                    <div class=""progress mb-2"" style=""height: 5px;"">
                                        <div class=""progress-bar bg-flat-color-3"" role=""progressbar"" style=""width: 60%;"" aria-valuenow=""60"" aria-valuemin=""0"" aria-valuemax=""100""></div>
                                    </div>
                                </div>
                                <div class=""progress-box progress-2"">
                                    <h4 class=""por-title"">Targeted  Visitors</h4>
                            ");
            WriteLiteral(@"        <div class=""por-txt"">99,658 Users (90%)</div>
                                    <div class=""progress mb-2"" style=""height: 5px;"">
                                        <div class=""progress-bar bg-flat-color-4"" role=""progressbar"" style=""width: 90%;"" aria-valuenow=""90"" aria-valuemin=""0"" aria-valuemax=""100""></div>
                                    </div>
                                </div>
                            </div> <!-- /.card-body -->
                        </div>
                    </div> <!-- /.row -->
                    <div class=""card-body""></div>
                </div>
            </div><!-- /# column -->
        </div>
        <!--  /Traffic -->
        <div class=""clearfix""></div>
        <!-- Orders -->
        <div class=""orders"">
            <div class=""row"">
                <div class=""col-xl-8"">
                    <div class=""card"">
                        <div class=""card-body"">
                            <h4 class=""box-title"">Orders </h4>
       ");
            WriteLiteral(@"                 </div>
                        <div class=""card-body--"">
                            <div class=""table-stats order-table ov-h"">
                                <table class=""table "">
                                    <thead>
                                        <tr>
                                            <th class=""serial"">#</th>
                                            <th class=""avatar"">Avatar</th>
                                            <th>ID</th>
                                            <th>Name</th>
                                            <th>Product</th>
                                            <th>Quantity</th>
                                            <th>Status</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td class=""serial"">1.</td>
                        ");
            WriteLiteral(@"                    <td class=""avatar"">
                                                <div class=""round-img"">
                                                    <a href=""#""><img class=""rounded-circle"" src=""images/avatar/1.jpg"" alt=""""></a>
                                                </div>
                                            </td>
                                            <td> #5469 </td>
                                            <td>  <span class=""name"">Louis Stanley</span> </td>
                                            <td> <span class=""product"">iMax</span> </td>
                                            <td><span class=""count"">231</span></td>
                                            <td>
                                                <span class=""badge badge-complete"">Complete</span>
                                            </td>
                                        </tr>
                                        <tr>
                                            ");
            WriteLiteral(@"<td class=""serial"">2.</td>
                                            <td class=""avatar"">
                                                <div class=""round-img"">
                                                    <a href=""#""><img class=""rounded-circle"" src=""images/avatar/2.jpg"" alt=""""></a>
                                                </div>
                                            </td>
                                            <td> #5468 </td>
                                            <td>  <span class=""name"">Gregory Dixon</span> </td>
                                            <td> <span class=""product"">iPad</span> </td>
                                            <td><span class=""count"">250</span></td>
                                            <td>
                                                <span class=""badge badge-complete"">Complete</span>
                                            </td>
                                        </tr>
                                      ");
            WriteLiteral(@"  <tr>
                                            <td class=""serial"">3.</td>
                                            <td class=""avatar"">
                                                <div class=""round-img"">
                                                    <a href=""#""><img class=""rounded-circle"" src=""images/avatar/3.jpg"" alt=""""></a>
                                                </div>
                                            </td>
                                            <td> #5467 </td>
                                            <td>  <span class=""name"">Catherine Dixon</span> </td>
                                            <td> <span class=""product"">SSD</span> </td>
                                            <td><span class=""count"">250</span></td>
                                            <td>
                                                <span class=""badge badge-complete"">Complete</span>
                                            </td>
                                ");
            WriteLiteral(@"        </tr>
                                        <tr>
                                            <td class=""serial"">4.</td>
                                            <td class=""avatar"">
                                                <div class=""round-img"">
                                                    <a href=""#""><img class=""rounded-circle"" src=""images/avatar/4.jpg"" alt=""""></a>
                                                </div>
                                            </td>
                                            <td> #5466 </td>
                                            <td>  <span class=""name"">Mary Silva</span> </td>
                                            <td> <span class=""product"">Magic Mouse</span> </td>
                                            <td><span class=""count"">250</span></td>
                                            <td>
                                                <span class=""badge badge-pending"">Pending</span>
                             ");
            WriteLiteral(@"               </td>
                                        </tr>
                                        <tr class="" pb-0"">
                                            <td class=""serial"">5.</td>
                                            <td class=""avatar pb-0"">
                                                <div class=""round-img"">
                                                    <a href=""#""><img class=""rounded-circle"" src=""images/avatar/6.jpg"" alt=""""></a>
                                                </div>
                                            </td>
                                            <td> #5465 </td>
                                            <td>  <span class=""name"">Johnny Stephens</span> </td>
                                            <td> <span class=""product"">Monitor</span> </td>
                                            <td><span class=""count"">250</span></td>
                                            <td>
                                                <span");
            WriteLiteral(@" class=""badge badge-complete"">Complete</span>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div> <!-- /.table-stats -->
                        </div>
                    </div> <!-- /.card -->
                </div>  <!-- /.col-lg-8 -->

                <div class=""col-xl-4"">
                    <div class=""row"">
                        <div class=""col-lg-6 col-xl-12"">
                            <div class=""card br-0"">
                                <div class=""card-body"">
                                    <div class=""chart-container ov-h"">
                                        <div id=""flotPie1"" class=""float-chart""></div>
                                    </div>
                                </div>
                            </div><!-- /.card -->
                        </div>

                        <div class");
            WriteLiteral(@"=""col-lg-6 col-xl-12"">
                            <div class=""card bg-flat-color-3  "">
                                <div class=""card-body"">
                                    <h4 class=""card-title m-0  white-color "">August 2018</h4>
                                </div>
                                <div class=""card-body"">
                                    <div id=""flotLine5"" class=""flot-line""></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div> <!-- /.col-md-4 -->
            </div>
        </div>
        <!-- /.orders -->
        <!-- To Do and Live Chat -->
        <div class=""row"">
            <div class=""col-lg-6"">
                <div class=""card"">
                    <div class=""card-body"">
                        <h4 class=""card-title box-title"">To Do List</h4>
                        <div class=""card-content"">
                            <div class=""todo-list"">");
            WriteLiteral(@"
                                <div class=""tdl-holder"">
                                    <div class=""tdl-content"">
                                        <ul>
                                            <li>
                                                <label>
                                                    <input type=""checkbox""><i class=""check-box""></i><span>Conveniently fabricate interactive technology for ....</span>
                                                    <a href='#' class=""fa fa-times""></a>
                                                    <a href='#' class=""fa fa-pencil""></a>
                                                    <a href='#' class=""fa fa-check""></a>
                                                </label>
                                            </li>
                                            <li>
                                                <label>
                                                    <input type=""checkbox""><i class=""check-bo");
            WriteLiteral(@"x""></i><span>Creating component page</span>
                                                    <a href='#' class=""fa fa-times""></a>
                                                    <a href='#' class=""fa fa-pencil""></a>
                                                    <a href='#' class=""fa fa-check""></a>
                                                </label>
                                            </li>
                                            <li>
                                                <label>
                                                    <input type=""checkbox"" checked><i class=""check-box""></i><span>Follow back those who follow you</span>
                                                    <a href='#' class=""fa fa-times""></a>
                                                    <a href='#' class=""fa fa-pencil""></a>
                                                    <a href='#' class=""fa fa-check""></a>
                                                </label>
        ");
            WriteLiteral(@"                                    </li>
                                            <li>
                                                <label>
                                                    <input type=""checkbox"" checked><i class=""check-box""></i><span>Design One page theme</span>
                                                    <a href='#' class=""fa fa-times""></a>
                                                    <a href='#' class=""fa fa-pencil""></a>
                                                    <a href='#' class=""fa fa-check""></a>
                                                </label>
                                            </li>

                                            <li>
                                                <label>
                                                    <input type=""checkbox"" checked><i class=""check-box""></i><span>Creating component page</span>
                                                    <a href='#' class=""fa fa-times""></a>
     ");
            WriteLiteral(@"                                               <a href='#' class=""fa fa-pencil""></a>
                                                    <a href='#' class=""fa fa-check""></a>
                                                </label>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div> <!-- /.todo-list -->
                        </div>
                    </div> <!-- /.card-body -->
                </div><!-- /.card -->
            </div>

            <div class=""col-lg-6"">
                <div class=""card"">
                    <div class=""card-body"">
                        <h4 class=""card-title box-title"">Live Chat</h4>
                        <div class=""card-content"">
                            <div class=""messenger-box"">
                                <ul>
                                    <li>
                              ");
            WriteLiteral(@"          <div class=""msg-received msg-container"">
                                            <div class=""avatar"">
                                                <img src=""images/avatar/64-1.jpg"" alt="""">
                                                <div class=""send-time"">11.11 am</div>
                                            </div>
                                            <div class=""msg-box"">
                                                <div class=""inner-box"">
                                                    <div class=""name"">
                                                        John Doe
                                                    </div>
                                                    <div class=""meg"">
                                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit. Perspiciatis sunt placeat velit ad reiciendis ipsam
                                                    </div>
                                        ");
            WriteLiteral(@"        </div>
                                            </div>
                                        </div><!-- /.msg-received -->
                                    </li>
                                    <li>
                                        <div class=""msg-sent msg-container"">
                                            <div class=""avatar"">
                                                <img src=""images/avatar/64-2.jpg"" alt="""">
                                                <div class=""send-time"">11.11 am</div>
                                            </div>
                                            <div class=""msg-box"">
                                                <div class=""inner-box"">
                                                    <div class=""name"">
                                                        John Doe
                                                    </div>
                                                    <div class=""meg"">
                 ");
            WriteLiteral(@"                                       Hay how are you doing?
                                                    </div>
                                                </div>
                                            </div>
                                        </div><!-- /.msg-sent -->
                                    </li>
                                </ul>
                                <div class=""send-mgs"">
                                    <div class=""yourmsg"">
                                        <input class=""form-control"" type=""text"">
                                    </div>
                                    <button class=""btn msg-send-btn"">
                                        <i class=""pe-7s-paper-plane""></i>
                                    </button>
                                </div>
                            </div><!-- /.messenger-box -->
                        </div>
                    </div> <!-- /.card-body -->
                </div><!-- /.");
            WriteLiteral(@"card -->
            </div>
        </div>
        <!-- /To Do and Live Chat -->
        <!-- Calender Chart Weather  -->
        <div class=""row"">
            <div class=""col-md-12 col-lg-4"">
                <div class=""card"">
                    <div class=""card-body"">
                        <!-- <h4 class=""box-title"">Chandler</h4> -->
                        <div class=""calender-cont widget-calender"">
                            <div id=""calendar""></div>
                        </div>
                    </div>
                </div><!-- /.card -->
            </div>

            <div class=""col-lg-4 col-md-6"">
                <div class=""card ov-h"">
                    <div class=""card-body bg-flat-color-2"">
                        <div id=""flotBarChart"" class=""float-chart ml-4 mr-4""></div>
                    </div>
                    <div id=""cellPaiChart"" class=""float-chart""></div>
                </div><!-- /.card -->
            </div>
            <div class=""col-lg-4 col-m");
            WriteLiteral(@"d-6"">
                <div class=""card weather-box"">
                    <h4 class=""weather-title box-title"">Weather</h4>
                    <div class=""card-body"">
                        <div class=""weather-widget"">
                            <div id=""weather-one"" class=""weather-one""></div>
                        </div>
                    </div>
                </div><!-- /.card -->
            </div>
        </div>
        <!-- /Calender Chart Weather -->
        <!-- Modal - Calendar - Add New Event -->
        <div class=""modal fade none-border"" id=""event-modal"">
            <div class=""modal-dialog"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>
                        <h4 class=""modal-title""><strong>Add New Event</strong></h4>
                    </div>
                    <div class=""modal-body""></div>
               ");
            WriteLiteral(@"     <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-default waves-effect"" data-dismiss=""modal"">Close</button>
                        <button type=""button"" class=""btn btn-success save-event waves-effect waves-light"">Create event</button>
                        <button type=""button"" class=""btn btn-danger delete-event waves-effect waves-light"" data-dismiss=""modal"">Delete</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- /#event-modal -->
        <!-- Modal - Calendar - Add Category -->
        <div class=""modal fade none-border"" id=""add-category"">
            <div class=""modal-dialog"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>
                        <h4 class=""modal-title""><strong>Add a category </strong></h4>
                    </div");
            WriteLiteral(">\r\n                    <div class=\"modal-body\">\r\n                        ");
            EndContext();
            BeginContext(25718, 1297, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e9b75f7d36e1498d9bda2b900c451ec5", async() => {
                BeginContext(25724, 699, true);
                WriteLiteral(@"
                            <div class=""row"">
                                <div class=""col-md-6"">
                                    <label class=""control-label"">Category Name</label>
                                    <input class=""form-control form-white"" placeholder=""Enter name"" type=""text"" name=""category-name"" />
                                </div>
                                <div class=""col-md-6"">
                                    <label class=""control-label"">Choose Category Color</label>
                                    <select class=""form-control form-white"" data-placeholder=""Choose a color..."" name=""category-color"">
                                        ");
                EndContext();
                BeginContext(26423, 40, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "10b14e17113d4fcbaa17fddb6b7c929a", async() => {
                    BeginContext(26447, 7, true);
                    WriteLiteral("Success");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(26463, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(26505, 38, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "72fb2dc1288044a39adada89fce66532", async() => {
                    BeginContext(26528, 6, true);
                    WriteLiteral("Danger");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(26543, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(26585, 34, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a75a9080c87646f7abee72607b0eb584", async() => {
                    BeginContext(26606, 4, true);
                    WriteLiteral("Info");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(26619, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(26661, 34, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1f0212f1e2524a99a9b95a7f116111d9", async() => {
                    BeginContext(26682, 4, true);
                    WriteLiteral("Pink");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(26695, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(26737, 40, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c6fdac80211d412c9853c6d70710aff5", async() => {
                    BeginContext(26761, 7, true);
                    WriteLiteral("Primary");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(26777, 42, true);
                WriteLiteral("\r\n                                        ");
                EndContext();
                BeginContext(26819, 40, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "679e938a01d64ee7ae395a89153d915d", async() => {
                    BeginContext(26843, 7, true);
                    WriteLiteral("Warning");
                    EndContext();
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(26859, 149, true);
                WriteLiteral("\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(27015, 491, true);
            WriteLiteral(@"
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-default waves-effect"" data-dismiss=""modal"">Close</button>
                        <button type=""button"" class=""btn btn-danger waves-effect waves-light save-category"" data-dismiss=""modal"">Save</button>
                    </div>
                </div>
            </div>
        </div>
        <!-- /#add-category -->
        </div>
    </div>
");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(27531, 9064, true);
                WriteLiteral(@"
            <script>
                jQuery(document).ready(function ($) {
                    ""use strict"";

                    // Pie chart flotPie1
                    var piedata = [
                        { label: ""Desktop visits"", data: [[1, 32]], color: '#5c6bc0' },
                        { label: ""Tab visits"", data: [[1, 33]], color: '#ef5350' },
                        { label: ""Mobile visits"", data: [[1, 35]], color: '#66bb6a' }
                    ];

                    $.plot('#flotPie1', piedata, {
                        series: {
                            pie: {
                                show: true,
                                radius: 1,
                                innerRadius: 0.65,
                                label: {
                                    show: true,
                                    radius: 2 / 3,
                                    threshold: 1
                                },
                                stroke: {
     ");
                WriteLiteral(@"                               width: 0
                                }
                            }
                        },
                        grid: {
                            hoverable: true,
                            clickable: true
                        }
                    });
                    // Pie chart flotPie1  End
                    // cellPaiChart
                    var cellPaiChart = [
                        { label: ""Direct Sell"", data: [[1, 65]], color: '#5b83de' },
                        { label: ""Channel Sell"", data: [[1, 35]], color: '#00bfa5' }
                    ];
                    $.plot('#cellPaiChart', cellPaiChart, {
                        series: {
                            pie: {
                                show: true,
                                stroke: {
                                    width: 0
                                }
                            }
                        },
                        legend");
                WriteLiteral(@": {
                            show: false
                        }, grid: {
                            hoverable: true,
                            clickable: true
                        }

                    });
                    // cellPaiChart End
                    // Line Chart  #flotLine5
                    var newCust = [[0, 3], [1, 5], [2, 4], [3, 7], [4, 9], [5, 3], [6, 6], [7, 4], [8, 10]];

                    var plot = $.plot($('#flotLine5'), [{
                        data: newCust,
                        label: 'New Data Flow',
                        color: '#fff'
                    }],
                        {
                            series: {
                                lines: {
                                    show: true,
                                    lineColor: '#fff',
                                    lineWidth: 2
                                },
                                points: {
                                    show: t");
                WriteLiteral(@"rue,
                                    fill: true,
                                    fillColor: ""#ffffff"",
                                    symbol: ""circle"",
                                    radius: 3
                                },
                                shadowSize: 0
                            },
                            points: {
                                show: true,
                            },
                            legend: {
                                show: false
                            },
                            grid: {
                                show: false
                            }
                        });
                    // Line Chart  #flotLine5 End
                    // Traffic Chart using chartist
                    if ($('#traffic-chart').length) {
                        var chart = new Chartist.Line('#traffic-chart', {
                            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],
    ");
                WriteLiteral(@"                        series: [
                                [0, 18000, 35000, 25000, 22000, 0],
                                [0, 33000, 15000, 20000, 15000, 300],
                                [0, 15000, 28000, 15000, 30000, 5000]
                            ]
                        }, {
                                low: 0,
                                showArea: true,
                                showLine: false,
                                showPoint: false,
                                fullWidth: true,
                                axisX: {
                                    showGrid: true
                                }
                            });

                        chart.on('draw', function (data) {
                            if (data.type === 'line' || data.type === 'area') {
                                data.element.animate({
                                    d: {
                                        begin: 2000 * data.index,
      ");
                WriteLiteral(@"                                  dur: 2000,
                                        from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),
                                        to: data.path.clone().stringify(),
                                        easing: Chartist.Svg.Easing.easeOutQuint
                                    }
                                });
                            }
                        });
                    }
                    // Traffic Chart using chartist End
                    //Traffic chart chart-js
                    if ($('#TrafficChart').length) {
                        var ctx = document.getElementById(""TrafficChart"");
                        ctx.height = 150;
                        var myChart = new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: [""Jan"", ""Feb"", ""Mar"", ""Apr"", ""May"", ""Jun"", ""Jul""],
                             ");
                WriteLiteral(@"   datasets: [
                                    {
                                        label: ""Visit"",
                                        borderColor: ""rgba(4, 73, 203,.09)"",
                                        borderWidth: ""1"",
                                        backgroundColor: ""rgba(4, 73, 203,.5)"",
                                        data: [0, 2900, 5000, 3300, 6000, 3250, 0]
                                    },
                                    {
                                        label: ""Bounce"",
                                        borderColor: ""rgba(245, 23, 66, 0.9)"",
                                        borderWidth: ""1"",
                                        backgroundColor: ""rgba(245, 23, 66,.5)"",
                                        pointHighlightStroke: ""rgba(245, 23, 66,.5)"",
                                        data: [0, 4200, 4500, 1600, 4200, 1500, 4000]
                                    },
                                    {");
                WriteLiteral(@"
                                        label: ""Targeted"",
                                        borderColor: ""rgba(40, 169, 46, 0.9)"",
                                        borderWidth: ""1"",
                                        backgroundColor: ""rgba(40, 169, 46, .5)"",
                                        pointHighlightStroke: ""rgba(40, 169, 46,.5)"",
                                        data: [1000, 5200, 3600, 2600, 4200, 5300, 0]
                                    }
                                ]
                            },
                            options: {
                                responsive: true,
                                tooltips: {
                                    mode: 'index',
                                    intersect: false
                                },
                                hover: {
                                    mode: 'nearest',
                                    intersect: true
                                }");
                WriteLiteral(@"

                            }
                        });
                    }
                    //Traffic chart chart-js  End
                    // Bar Chart #flotBarChart
                    $.plot(""#flotBarChart"", [{
                        data: [[0, 18], [2, 8], [4, 5], [6, 13], [8, 5], [10, 7], [12, 4], [14, 6], [16, 15], [18, 9], [20, 17], [22, 7], [24, 4], [26, 9], [28, 11]],
                        bars: {
                            show: true,
                            lineWidth: 0,
                            fillColor: '#ffffff8a'
                        }
                    }], {
                            grid: {
                                show: false
                            }
                        });
                    // Bar Chart #flotBarChart End
                });
            </script>

        ");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
